import matplotlib.plot as plt
import numpy as np
import math

# МЕДИАНА
all = []
x1 = np.linspace(1,5,5,endpoint = False)
y1 = x1
x2 = np.linspace(4.5, 100, 5)
y2 = [math.exp(i)+2 for i in x1]
x3 = np.linspace(100,120, 10)
y3 = [68, 72, 74, 77, 78, 79, 76, 74, 73, 68]
x4 = [121,130]
y4 = [68,5]
x5 = np.linspace(130,200,1000)
y5 = [(1/(i-129.8)) for i in x5]
for i in range(len(y2)):
    all.append(y2[i])
for i in range(len(y3)):
    all.append(y3[i])
for i in range(len(y4)):
    all.append(y4[i])
all.sort()
modax = [0, 200]
moda = all[(len(all) // 2) + (len(all) % 2)]
moday = [moda, moda]
plt.title("МЕДИАНА")
plt.xlabel("Количество ассоциаций")
plt.ylabel("ЛЮДИ")
plt.grid()
plt.plot(x1,y1, "r--", x2,y2,x3, y3, "y--", x4, y4, x5, y5, "r--", modax, moday)
plt.show()

# МОДА
facultets = ["МИЭМ", "ФКН", "Экономика", "Бизнес \nи\n Менеджмент", "Математика"]
counts = [3550, 4774, 5016, 2447, 466]
for i in range(len(counts)):
    if counts[i] == max(counts):
        f = 'r'
    else:
        f = 'b'
    plt.bar(facultets[i], counts[i], facecolor = f)
plt.title("МОДА")
plt.xlabel("Факультет")
plt.ylabel("Кол-во студентов")
plt.show()

# ГИСТОГРАММА
facultets = ["МИЭМ", "ФКН", "Экономика", "Бизнес \nи\n Менеджмент", "Математика"]
counts = [3550, 4774, 5016, 2447, 466]
plt.bar(facultets, counts)
plt.title("Мода")
plt.xlabel("Факультет")
plt.ylabel("Кол-во студентов")
plt.show()

# БУБЛИК МАРЖИ
fig, ax = plt.subplots(figsize=(6, 3), subplot_kw=dict(aspect="equal"))
facultets = ["МИЭМ", "ФКН", "Экономика", "Бизнес && Менеджмент", "Математика"]
counts = [3550, 4774, 5016, 2447, 466]
wedges, texts = ax.pie(counts, wedgeprops=dict(width=0.5), startangle=-40)
bbox_props = dict(boxstyle="square,pad=0.3", fc="w", ec="k", lw=0.72)
kw = dict(arrowprops=dict(arrowstyle="-"),
          bbox=bbox_props, zorder=0, va="center")
for i, p in enumerate(wedges):
    ang = (p.theta2 - p.theta1)/2. + p.theta1
    y = np.sin(np.deg2rad(ang))
    x = np.cos(np.deg2rad(ang))
    horizontalalignment = {-1: "right", 1: "left"}[int(np.sign(x))]
    connectionstyle = "angle,angleA=0,angleB={}".format(ang)
    kw["arrowprops"].update({"connectionstyle": connectionstyle})
    ax.annotate(facultets[i], xy=(x, y), xytext=(1.35*np.sign(x), 1.4*y),
                horizontalalignment=horizontalalignment, **kw)
